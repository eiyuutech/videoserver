import mailConfig from '../../config/mail-server.json';
// import logger from '../logger';
import mailer from './node-mailer';
import emailEnvChecker from './email-env-checker';

const CONFIG = require('../../config/config');

const env = CONFIG.app;
const {
  host,
  user,
  pass,
  port,
} = mailConfig[env];
const setting = {
  host,
  auth: {
    user,
    pass,
    port,
  },
};

class MailService {
  constructor(settingParams = setting) {
    this.mailer = mailer.createTransport(settingParams);
  }

  /**
   * @param {MailOPtion} option
   * type MailOption = {
   *   from: string,
   *   to: string,
   *   subject: string,
   *   text?: string (generated by mailCreator),
   *   bcc? :string,
   * }
   * send mail method
   */
  send(option) {
    const mainOption = option;
    // mainOption.to = emailEnvChecker(option.to);

    if (env === 'production') {
      mainOption.bcc = '';
    } else if (env === 'test') {
      return Promise.resolve();
    }

    return new Promise(async(resolve, reject) => {
      const smtp = this.mailer;
      try {
        await smtp.sendMail(mainOption);
      } catch (e) {
        smtp.close();
        console.log(`mailError: ${JSON.stringify(e)}`);
        reject(e);
      }
      console.log(`sendMail ${JSON.stringify(mainOption)}`);
      resolve();
    });
  }
}

export default new MailService();
